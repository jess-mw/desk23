{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/data.service.ts","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/app/globe/globe.component.ts","./src/app/globe/globe.component.html","./src/app/tutorial/tutorial.component.html","./src/app/tutorial/tutorial.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Country } from '../models/country';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  private REST_API_SERVER = 'http://localhost:3000/countries/getCountries';\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getCountryData() : Observable<Country[]>{\r\n\r\n    return this.httpClient.get<Country[]>(this.REST_API_SERVER);\r\n      \r\n  }\r\n\r\n  public getAll(){\r\n    //return this.httpClient.get(this.REST_API_SERVER);\r\n\r\n    /* return [\r\n      {\r\n        Entity: \"Afghanistan\",\r\n        Year: 2015,\r\n        Data: 18.157681,\r\n        Latitude: 33.93911,\r\n        Longitude: 67.709953,\r\n        Area: 647500\r\n      }, \r\n      {\r\n        Entity: \"Albania\",\r\n        Year: 2015,\r\n        Data: 343,\r\n        Latitude: 41.153332,\r\n        Longitude: 20.168331,\r\n        Area: 33\r\n      },\r\n      {\r\n        Entity: \"Argentina\",\r\n        Year: 2015,\r\n        Data: 51.299999,\r\n        Latitude: -38.416097,\r\n        Longitude: -63.616672,\r\n        Area: 34245\r\n      },\r\n    ]; */\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Welcome to our website!</h1>\r\n\r\n<nav>\r\n    <a routerLink=\"/globe\">Click here to check out our globe!</a>\r\n</nav>","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef, HostListener, Host } from '@angular/core';\r\nimport { Country } from '../models/country';\r\nimport { DataService } from '../services/data.service';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\"\r\n//import * as data from '../../data/countries.json';\r\n//import { Data } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-globe',\r\n  templateUrl: './globe.component.html',\r\n  styleUrls: ['./globe.component.css']\r\n})\r\n\r\nexport class GlobeComponent implements AfterViewInit {\r\n  //'globeCanvas' refers to the one established in the html file \r\n  //cReference is the variable we are using\r\n  //ViewChild basically sets up where the canvas element is\r\n  @ViewChild('globeCanvas') cReference!: ElementRef;\r\n\r\n  countryName! : string | null;\r\n  literacyRate! : string | null;\r\n  currentYear : number = 2015;\r\n  displayType! : string;\r\n\r\n  top! : string;\r\n  left! : string;\r\n\r\n  renderer = new THREE.WebGLRenderer;\r\n  scene : THREE.Scene;\r\n  camera : THREE.PerspectiveCamera;\r\n  controls! : OrbitControls;\r\n  globe! : THREE.Mesh;\r\n  mainLight! : THREE.Light;\r\n\r\n  windowWidth! : number;\r\n  windowHeight! : number;\r\n\r\n  lightGroup!: THREE.Group;\r\n  //listOfCountries:  any  = (data  as  any).default;\r\n\r\n  //creating an array of Country objects\r\n  listOfCountries!: Country[];\r\n\r\n  raycaster!: THREE.Raycaster;\r\n  mouse! : THREE.Vector2;\r\n\r\n  private get aspectRatio(): number {\r\n    return this.windowWidth / this.windowHeight;\r\n  }\r\n\r\n  private get canvas(): HTMLCanvasElement {\r\n    return this.cReference.nativeElement;\r\n  }\r\n\r\n  constructor(private countryService : DataService) {\r\n    this.windowWidth = window.innerWidth;\r\n    this.windowHeight = window.innerHeight;\r\n\r\n    this.scene = new THREE.Scene();\r\n    this.camera = new THREE.PerspectiveCamera(50, this.windowWidth/this.windowHeight, 0.1, 1000)\r\n\r\n    this.lightGroup = new THREE.Group();\r\n    this.raycaster = new THREE.Raycaster();\r\n    this.mouse = new THREE.Vector2();\r\n\r\n    this.countryName = null;\r\n    this.displayType = \"none\";\r\n\r\n    this.top = \"0px\";\r\n    this.left = \"0px\";\r\n  }\r\n\r\n  ngOnInit() {\r\n    //this.listOfCountries = this.countryService.getAll();\r\n    this.countryService.getCountryData().subscribe((countries) => {\r\n      this.listOfCountries = countries;\r\n    }); \r\n\r\n    this.listOfCountries  = (this.listOfCountries  as  any).default;\r\n\r\n    //console.log(\"Country printed in ngOnInit : \" + this.listOfCountries[0].Entity);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.setScene();\r\n    this.setCamera();\r\n    this.setRenderer();\r\n    this.setControls();\r\n\r\n    this.createLightGroup();\r\n    this.createGlobe();\r\n\r\n    this.animate();\r\n    this.setAllPoints(this.currentYear);\r\n  }\r\n\r\n\r\n  setScene() {\r\n\r\n    const loader = new THREE.CubeTextureLoader();\r\n\r\n    /* const skyBox = loader.load([\r\n      '../../assets/images/space_right.png',\r\n      '../../assets/images/space_left.png',\r\n      '../../assets/images/space_top.png',\r\n      '../../assets/images/space_bot.png',\r\n      '../../assets/images/space_front.png',\r\n      '../../assets/images/space_back.png',\r\n    ]);\r\n */\r\n\r\n    /* Images appear to be too small in comparison to the ones previously used - let's try zooming in -yep it works */\r\n    const skyBox2 = loader.load([\r\n      '../../assets/images/temp/space_right3.png',\r\n      '../../assets/images/temp/space_left3.png',\r\n      '../../assets/images/temp/space_up3.png',\r\n      '../../assets/images/temp/bottom2.png',\r\n      '../../assets/images/temp/front2.png',\r\n      '../../assets/images/temp/back2.png'\r\n    ]);\r\n\r\n    this.scene.background = skyBox2; \r\n  }\r\n\r\n  setCamera() {\r\n    this.camera.aspect = this.aspectRatio;\r\n    this.camera.updateProjectionMatrix();\r\n\t  this.camera.position.set( 35, 0, 0 ); //changed from 40 to 30\r\n\t  this.camera.lookAt( this.scene.position );\r\n  }\r\n\r\n  setRenderer() {\r\n    this.renderer = new THREE.WebGLRenderer({\r\n      canvas: this.canvas,\r\n      antialias: true,\r\n      alpha: true\r\n    });\r\n\r\n    this.renderer.setPixelRatio(devicePixelRatio);\r\n    this.renderer.setSize(this.windowWidth, this.windowHeight);\r\n  }\r\n\r\n  setControls() {\r\n    this.controls = new OrbitControls(this.camera, this.canvas);\r\n    this.controls.autoRotate = false;\r\n    this.controls.enableZoom = true;\r\n    this.controls.enablePan = false;\r\n    this.controls.minDistance = 12;\r\n    this.controls.maxDistance = 60;\r\n    this.controls.update();\r\n  }\r\n\r\n  createLightGroup() {\r\n   // this.mainLight = new THREE.PointLight( 0xffffff, 2, 50 );\r\n    this.mainLight = new THREE.AmbientLight( 0xffffff);\r\n\t  this.mainLight.position.set( 0, 0, 50 );\r\n    this.lightGroup.add(this.mainLight);\r\n    this.scene.add(this.lightGroup);\r\n  }\r\n\r\n  createGlobe() {\r\n \r\n    //maps from: http://planetpixelemporium.com/earth.html && https://www.solarsystemscope.com/textures/\r\n    let Emap = new THREE.TextureLoader().load('../../assets/images/2k_earth_daymap.jpg');\r\n    let Ebump = new THREE.TextureLoader().load('../../assets/images/earthbump4k.jpg');\r\n    let Espec = new THREE.TextureLoader().load('../../assets/images/earthspec4k.jpg');\r\n\r\n    const sphere = new THREE.SphereGeometry(10,50,50);\r\n    const material = new THREE.MeshPhongMaterial({ \r\n        map : Emap,\r\n        bumpMap : Ebump,\r\n        bumpScale : 0.10,\r\n        specularMap : Espec,\r\n        specular : new THREE.Color('grey')\r\n      });\r\n\r\n    this.globe = new THREE.Mesh(sphere, material);\r\n    this.scene.add(this.globe);\r\n\r\n    this.createCountryNames();\r\n\r\n  }\r\n\r\n  createCountryNames() {\r\n    let Cmap = new THREE.TextureLoader().load('../../assets/images/WorldMap.png');\r\n    const sphere = new THREE.SphereGeometry(10.2,50,50);\r\n    const material = new THREE.MeshPhongMaterial({\r\n        map : Cmap,\r\n        transparent: true,\r\n        opacity : 1});\r\n\r\n    let countryNames = new THREE.Mesh(sphere, material);\r\n\r\n    this.scene.add(countryNames);\r\n  }\r\n\r\n  animate() {\r\n    //here is the most important difference! learn why\r\n    window.requestAnimationFrame(() => this.animate());\r\n\r\n    this.lightGroup.quaternion.copy(this.camera.quaternion);\r\n    this.render();\r\n    this.controls.update();\r\n  }\r\n\r\n  render () {\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n  \r\n  //working on coordinates\r\n  //reference: https://stackoverflow.com/questions/1185408/converting-from-longitude-latitude-to-cartesian-coordinates\r\n  addCoordinatePoint (country:string, latitude: number, longitude: number, countryArea:number, litData: number) {\r\n\r\n    //clear all previous children if any? \r\n    //then set up the new points based of the year value \r\n\r\n    //radius of the globe\r\n    const radius = 10;\r\n\r\n    //convert degrees to radians \r\n    let globeLatRads = latitude * (Math.PI / 180);\r\n    let globeLongRads = -longitude * (Math.PI / 180);\r\n\r\n    //get x, y and z coordinates\r\n    let x = Math.cos(globeLatRads) * Math.cos(globeLongRads) * radius;\r\n    let y = Math.cos(globeLatRads) * Math.sin(globeLongRads) * radius;\r\n    let z = Math.sin(globeLatRads) * radius;\r\n\r\n    //create spherical shape\r\n    //let size = countryArea / 9000000; \r\n    /* if (size < 0.2) {\r\n      size = 0.2;\r\n    } */\r\n    //adding the spherical point\r\n    /* let poi = new THREE.SphereGeometry(size,32,32);    \r\n    let pointMaterial = new THREE.MeshBasicMaterial({color:0x00ff00});\r\n    let point = new THREE.Mesh(poi, pointMaterial); \r\n    //set the point on the globe\r\n    point.position.set( x, z, y );\r\n    point.userData.Country = country;\r\n    point.visible = true;\r\n    //becomes a child of the globe \r\n    this.globe.add(point);  */\r\n\r\n\r\n    //let's try the above but with cuboids set perpendicular to the globe's surface\r\n    //credit: https://stackoverflow.com/questions/51800598/threejs-make-meshes-perpendicular-to-the-sphere-face-its-sitting-on\r\n    let height = litData / 18;\r\n    let poi2 = new THREE.CylinderGeometry(0.1,0.1,height,64);\r\n    poi2.applyMatrix4(new THREE.Matrix4().makeRotationX(-Math.PI/2));\r\n    let poi2Material = new THREE.MeshBasicMaterial({color:0xcc3367});\r\n    let point2 = new THREE.Mesh(poi2, poi2Material);\r\n    point2.position.set( x, z, y);\r\n    point2.lookAt(0,0,0);\r\n    point2.userData.Country = country;\r\n    point2.userData.LiteracyRate = litData;\r\n    \r\n    this.globe.add(point2); \r\n}\r\n\r\n  setAllPoints(userSetYear: number) {\r\n\r\n    //remove all children if any and add new ones\r\n    while(this.globe.children.length) {\r\n      this.globe.remove(this.globe.children[0]);\r\n    }\r\n\r\n    console.log(\"Length of list of countries is : \"+this.listOfCountries.length);\r\n    \r\n      for (let i = 0; i < this.listOfCountries.length; i++) {\r\n        //this.addCoordinatePoint(this.listOfCountries[i].Country, this.listOfCountries[i].latitude, this.listOfCountries[i].longitude, this.listOfCountries[i].Area_sq_mi);\r\n        //console.log(this.listOfCountries[i].Entity, this.listOfCountries[i].Latitude, this.listOfCountries[i].Longitude);\r\n\r\n        if (this.listOfCountries[i].Year == userSetYear) { \r\n          this.addCoordinatePoint(this.listOfCountries[i].Entity, this.listOfCountries[i].Latitude, this.listOfCountries[i].Longitude, this.listOfCountries[i].Area, this.listOfCountries[i].Data);\r\n        }\r\n      }\r\n  }\r\n\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onWindowResize() {\r\n    this.windowWidth = window.innerWidth;\r\n    this.windowHeight = window.innerHeight;\r\n    this.camera.aspect = this.aspectRatio;\r\n    this.camera.updateProjectionMatrix(); \r\n    this.renderer.setSize(this.windowWidth, this.windowHeight);\r\n  }\r\n\r\n  @HostListener('click',['$event']) \r\n  onMouseClick(event : any) {\r\n    console.log(\"mouse clicked\");\r\n    event.preventDefault();\r\n\r\n    this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n    this.mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n\r\n    this.raycaster.setFromCamera(this.mouse, this.camera);\r\n\r\n    const intersects = this.raycaster.intersectObjects(this.globe.children);\r\n\r\n    if (intersects.length == 0) {\r\n      console.log(\"intersects is empty!\");\r\n      this.displayType = \"none\";\r\n      this.countryName = null;\r\n    }\r\n\r\n    for (let i = 0; i < intersects.length; i++) {\r\n      console.log(\"intersected\");\r\n      console.log(intersects[0]);\r\n\r\n      //show the textbox \r\n      this.displayType = \"flex\";\r\n\r\n      //position the textbox \r\n      this.top = (event.clientY - 100) + 'px';\r\n      \r\n      this.left = (event.clientX + 20) + 'px';\r\n\r\n      console.log(\"top is \" + this.top);\r\n      console.log(\"left is : \" + this.left);\r\n\r\n      //@ts-ignore\r\n      intersects[ 0 ].object.material.color.set( 0xff0000 );\r\n      this.countryName = intersects[0].object.userData.Country;\r\n      this.literacyRate = intersects[0].object.userData.LiteracyRate;\r\n    }\r\n\r\n    //this.render();\r\n  }\r\n\r\n  onSlide() {\r\n    this.setAllPoints(this.currentYear);\r\n  }\r\n\r\n}\r\n","<canvas #globeCanvas (window:resize)=\"onWindowResize()\"></canvas>\r\n<!-- (window:resize)=\"onWindowResize()\"-->\r\n\r\n<div id = \"displayLiteracyRates\" [style.display]= \"displayType\" [style.top] = \"top\"  [style.left] = \"left\">\r\n    Literacy Rates\r\n    <div id = \"displayCountryName\">\r\n        Country : {{countryName}}\r\n        Literacy Rate : {{literacyRate}}\r\n    </div>\r\n</div>\r\n\r\n\r\n<app-tutorial></app-tutorial>\r\n \r\n\r\n<!-- <app-slider></app-slider>\r\n -->\r\n\r\n<div id = \"sliderBox\">\r\n    <mat-slider thumbLabel  [(ngModel)] = \"currentYear\" min=\"1475\" max = \"2015\"  (ngModelChange)=\"onSlide()\"></mat-slider>\r\n</div> \r\n\r\n<!-- don't need this anymore!\r\n<div id = \"currentYearBox\">\r\n    {{currentYear}} \r\n</div>  -->\r\n\r\n<!-- (slideend)=\"onSlide()\" (pointerup)=\"onSlide()\" -->\r\n\r\n","\n<div id = \"showTut\">\n    <button (click)=\"showTutorial()\">Show Tutorial</button>\n    <button (click)=\"hideTutorial()\">Hide Tutorial</button>\n</div>\n\n<div id = \"spinLeftOrRight\" *ngIf = \"tutorialShown\">\n    Spin the globe in any direction by clicking and dragging!\n</div>\n\n<div id = \"moveSlider\" *ngIf = \"tutorialShown\" >\n    Drag the slider left or right to change which year we are currently in\n</div>\n\n\n<div id = \"clickCountry\" *ngIf = \"tutorialShown\">\n    Click on the name of a country to view its literacy rates\n</div>\n\n<!-- <div id = \"currentYearBox\">\n    Hello There\n</div> -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tutorial',\n  templateUrl: './tutorial.component.html',\n  styleUrls: ['./tutorial.component.css']\n})\nexport class TutorialComponent implements OnInit {\n\n\n  tutorialShown: boolean = true;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  showTutorial() {\n    this.tutorialShown = true;\n  }\n\n  hideTutorial() {\n    this.tutorialShown = false;\n  }\n\n\n\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'LiteracyRates';\r\n}\r\n","<!-- <app-globe></app-globe>\r\n -->\r\n\r\n <!-- this was causing the horizontal overflow for some reason -->\r\n<div id = mainContainer>\r\n    <router-outlet></router-outlet>\r\n</div> \r\n\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {NgModule} from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport { GlobeComponent } from './globe/globe.component';\r\nimport { TutorialComponent } from './tutorial/tutorial.component';\r\n//import { SliderComponent } from './slider/slider.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    GlobeComponent,\r\n    TutorialComponent,\r\n  //  SliderComponent,\r\n    WelcomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatSliderModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\n\r\nimport { GlobeComponent } from './globe/globe.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'globe', component: GlobeComponent },\r\n  { path: '', component: WelcomeComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}